{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "resourceGroupLocation": {
        "type": "string"
      },
      "resourceGroupName": {
        "type": "string"
      },
      "projectDetailprefix": {
        "type": "string"
      },
      "projectDetailenvironment": {
        "type": "string"
      },
      "projectDetailproject": {
        "type": "string"
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located including a trailing '/'"
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
        },
        "defaultValue": ""
      },
      "nestedTemplatesFolder": {
        "type": "string",
        "defaultValue": "."
      },
      "ownerRoleId": {
        "type": "string",
        "defaultValue": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
      },
      "readerRoleId": {
        "type": "string",
        "defaultValue": "acdd72a7-3385-48ef-bd42-f606fba81ae7"
      },
      "appInsightsTemplateFileName": {
        "type": "string",
        "defaultValue": "AppInsights.Template.json"
      },
      "keyVaultTemplateFileName": {
        "type": "string",
        "defaultValue": "KeyVault.Template.json"
      },
      "resourecGroupType": {
        "type": "string",
        "defaultValue": "rg"
      },
      "appServicePlanType": {
        "type": "string",
        "defaultValue": "asp"
      },
      "functionAppType": {
        "type": "string",
        "defaultValue": "func"
      },
      "webAppType": {
        "type": "string",
        "defaultValue": "web"
      },
      "storageAccountType": {
        "type": "string",
        "defaultValue": "st"
      },
      "appInsightsType": {
        "type": "string",
        "defaultValue": "ins"
      },
      "cosmosDBType": {
        "type": "string",
        "defaultValue": "cos"
      },
      "keyVaultType": {
        "type": "string",
        "defaultValue": "key"
      },
      "cogService": {
        "type": "string",
        "defaultValue": "cog"
      },
      "machineLearningName": {
        "type": "string",
        "defaultValue": "concat(parameters('projectDetailprefix'),'-mlworkspace')"
      },
      "machineLearningDatastoreName": {
        "type": "string",
        "defaultValue": "dipdatastore"
      },
      "machineLearningCompute": {
        "type": "string",
        "defaultValue": "mlcomp"
      },
      "signalR": {
        "type": "string",
        "defaultValue": "sigr"
      },
      "containerRegistry": {
        "type": "string",
        "defaultValue": "containerregistry"
      },
      "appInsightsName": {
        "type": "string"
      },
      "appInsightsLocation": {
        "type": "string"
      },
      "keyVaultName": {
        "type": "string"
      },
      "keyVaultLocation": {
        "type": "string"
      },
      "keyVaultSku": {
        "type": "string"
      },
      "storageTemplateFileName": {
        "type": "string",
        "defaultValue": "Storage.Template.json"
      },
      "storageParametersFileNameTraining": {
        "type": "string",
        "defaultValue": "Storage.Training.Parameters.json"
      },
      "mlStorageAccountName": {
        "type": "string"
      },
      "mlStorageAccountSku": {
        "type": "string"
      },
      "mlStorageLocation": {
        "type": "string"
      },
      "trainingStorageName": {
        "type": "string"
      },
      "trainingStorageSku": {
        "type": "string"
      },
      "trainingStorageLocation": {
        "type": "string"
      },
      "processingStorageName": {
        "type": "string"
      },
      "processingStorageSku": {
        "type": "string"
      },
      "processingStorageLocation": {
        "type": "string"
      },
      "publishedStorageName": {
        "type": "string"
      },
      "publishedStorageSku": {
        "type": "string"
      },
      "publishedStorageLocation": {
        "type": "string"
      },
      "storageBlobContainerTemplateFileName": {
        "type": "string",
        "defaultValue": "Storage.BlobContainer.Template.json"
      },
      "roleAssignmentStorageTemplateFileName": {
        "type": "string",
        "defaultValue": "RoleAssigment.Storage.Template.json"
      },
      "roleAssignmentTemplateFileName": {
        "type": "string",
        "defaultValue": "RoleAssigment.Template.json"
      },
      "storageParametersFileNameProcessing": {
        "type": "string",
        "defaultValue": "Storage.Processing.Parameters.json"
      },
      "storageParametersFileNameProcessingPublished": {
        "type": "string",
        "defaultValue": "Storage.Processing.Published.Parameters.json"
      },
      "storageQueueTemplateFileName": {
        "type": "string",
        "defaultValue": "Storage.Queue.Template.json"
      },
      "cosmosDBTemplateFileName": {
        "type": "string",
        "defaultValue": "CosmosDB.Template.json"
      },
      "cosmosDBSQLDBTemplateFileName": {
        "type": "string",
        "defaultValue": "CosmosDB.SQLDB.Template.json"
      },
      "cosmosDBName": {
        "type": "string"
      },
      "cosmosDBLocation": {
        "type": "string"
      },
      "cosmosDBLocationName": {
        "type": "string"
      },
      "cosmosDBSQLDBContainerTemplateFileName": {
        "type": "string",
        "defaultValue": "CosmosDB.SQLDB.Container.Template.json"
      },
      "CosmosDBSQLDBContainerUDFTemplateFileName": {
        "type": "string",
        "defaultValue": "CosmosDB.SQLDB.Container.UDF.Template.json"
      },
      "appServicePlanTemplateFileName": {
        "type": "string",
        "defaultValue": "AppServicePlan.Template.json"
      },
      "webAppServicePlanName": {
        "type": "string"
      },
      "webAppLocation": {
        "type": "string"
      },
      "webAppName": {
        "type": "string"
      },
      "webAppTemplateFileName": {
        "type": "string",
        "defaultValue": "WebApp.Template.json"
      },
      "ZipDeployTemplateFileName": {
        "type": "string",
        "defaultValue": "ZipDeploy.Template.json"
      },
      "cognitiveServiceTemplateFileName": {
        "type": "string",
        "defaultValue": "CogService.Template.json"
      },
      "customVisionAuthoringName": {
        "type": "string"
      },
      "customVisionPredictionName": {
        "type": "string"
      },
      "customVisionLocation": {
        "type": "string"
      },
      "computerVisionName": {
        "type": "string"
      },
      "computerVisionLocation": {
        "type": "string"
      },
      "formRecognizerName": {
        "type": "string"
      },
      "formRecognizerLocation": {
        "type": "string"
      },
      "luisAuthoringName": {
        "type": "string"
      },
      "luisPredictionName": {
        "type": "string"
      },
      "luisLocation": {
        "type": "string"
      },
      "luisLocationAuthoring": {
        "type": "string"
      },
      "signalRTemplateFileName": {
        "type": "string",
        "defaultValue": "SignalR.Template.json"
      },
      "signalRName": {
        "type": "string"
      },
      "signalRLocation": {
        "type": "string"
      },
      "machineLearningTemplateFileName": {
        "type": "string",
        "defaultValue": "MachineLearning.Template.json"
      },
      "machineLearningComputeTemplateFileName": {
        "type": "string",
        "defaultValue": "MachineLearning.Compute.Template.json"
      },
      "machineLearningComputeLocation": {
        "type": "string"
      },
      "machineLearningDataStoreTemplateFileName": {
        "type": "string",
        "defaultValue": "MachineLearning.DataStore.Template.json"
      },
      "functionAppTemplateFileName": {
        "type": "string",
        "defaultValue": "FunctionApp.Template.json"
      },
      "functionAppConfigTemplateFileName": {
        "type": "string",
        "defaultValue": "FunctionApp.Config.Template.json"
      },
      "functionAppDipKeyTemplateFileName": {
        "type": "string",
        "defaultValue": "FunctionApp.DipKey.Template.json"
      },
      "orchestrationFunctionAppName": {
        "type": "string"
      },
      "orchestrationHostingPlanName": {
        "type": "string"
      },
      "orchestrationFunctionAppLocation": {
        "type": "string"
      },
      "modulesFunctionAppName": {
        "type": "string"
      },
      "modulesHostingPlanName": {
        "type": "string"
      },
      "modulesFunctionAppLocation": {
        "type": "string"
      },
      "keyVaultAccessPolicyFileName": {
        "type": "string",
        "defaultValue": "KeyVault.AccessPolicy.Template.json"
      },
      "keyVaultCurrentUserAccessPolicyFileName": {
        "type": "string",
        "defaultValue": "KeyVault.AccessPolicy.CurrentUser.Template.json"
      },
      "keyVaultSecretTemplateFileName": {
        "type": "string",
        "defaultValue": "KeyVault.Secret.Template.json"
      },
      "customMLHostingPlanName": {
        "type": "string"
      },
      "customMLFunctionAppLocation": {
        "type": "string"
      },
      "customMLFunctionAppName": {
        "type": "string"
      },
      "customMLFunctionAppKeyName": {
        "type": "string",
        "defaultValue": "dipkey"
      },
      "functionAppContainerTemplateFileName": {
        "type": "string",
        "defaultValue": "FunctionApp.Container.Template.json"
      },
      "customMLFunctionAppTemplateFileName": {
        "type": "string",
        "defaultValue": "CustomMLFunctionApp.Settings.Template.json"
      },
      "containerRegistryTemplateFileName": {
        "type": "string",
        "defaultValue": "ContainerRegistry.Template.json"
      },
      "containerRegistryName": {
        "type": "string"
      },
      "sourceContainerRegistryName": {
        "type": "string",
        "defaultValue": "neudip"
      },
      "sourceContainerUserName": {
        "type": "securestring"
      },
      "sourceContainerPassword": {
        "type": "securestring"
      },
      "containerRegistryLocation": {
        "type": "string"
      },
      "orchestrationFunctionAppSettingsTemplateFileName": {
        "type": "string",
        "defaultValue": "OrchestrationFunctionApp.Settings.Template.json"
      },
      "modulesFunctionAppSettingsTemplateFileName": {
        "type": "string",
        "defaultValue": "ModulesFunctionApp.Settings.Template.json"
      },
      "webAppSettingsTemplateFileName": {
        "type": "string",
        "defaultValue": "WebApp.Settings.Template.json"
      },
      "STORAGE_CONTAINER_NAME_LOG": {
        "type": "string",
        "defaultValue": "auditlogs"
      },
      "COMPUTER_VISION_VERSION_URL": {      
        "type": "string",
        "defaultValue": "vision/v3.2/read/analyze?readingorder=natural"
      },
      "scriptLUISTemplateFileName": {
          "type": "string",
          "defaultValue": "Script.LUIS.Template.json"
      },
      "scriptDataStoreTemplateFileName": {
          "type": "string",
          "defaultValue": "Script.DataStore.Template.json"
      },
      "scriptFunctionAppUrlKVTemplateFileName": {
          "type": "string",
          "defaultValue": "Script.MLFunctionAppUrlKv.Template.json"
      },
      "scriptTextClassificationTemplateFileName": {
          "type": "string",
          "defaultValue": "Script.TextClassification.Template.json"
      },
      "jitAccessPolicyTEMP": {
        "type": "object",
        "defaultValue": {}
      },
      "deploymentUserObjectId": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Object ID to set KeyVault Access policy for current user"
        }
      },
      "deploymentAssetPath": {
        "type": "string",
        "defaultValue": "assets"
      },
      "deploymentTemplatePath": {
        "type": "string",
        "defaultValue": "templates"
      },
      "deploymentConfigurationFileName": {
        "type": "string",
        "defaultValue": "deploymentConfig.json"
      },
      "deploymentAssetModulesFileName": {
        "type": "string",
        "defaultValue": "modules.zip"
      },
      "deploymentAssetWebAppFileName": {
        "type": "string",
        "defaultValue": "web.zip"
      },
      "deploymentAssetOrchFileName": {
        "type": "string",
        "defaultValue": "orch.zip"
      },
      "deploymentAssetVersionNumber": {
        "type": "string",
        "defaultValue": "1-7-4"
      },
      "isMarketPlaceDeployment": {
          "type": "string",
          "defaultValue": "false"
      }
    },
    "variables": {
      "combinedTemplatePath": "[concat(parameters('deploymentAssetPath'),'/',parameters('deploymentTemplatePath'))]",
      "isSameTenantDeployment": "[if(equals(parameters('isMarketPlaceDeployment'),'true'),if(equals(subscription().tenantId,'687f51c3-0c5d-4905-84f8-97c683a5b9d1'),'true',''),'true')]",
      "identityName": "[concat(parameters('projectDetailprefix'),parameters('projectDetailproject'),parameters('projectDetailenvironment'),'-identity')]"
    },
    "resources": [
      {
        "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
        "name": "[variables('identityName')]",
        "apiVersion": "2018-11-30",
        "location": "[resourceGroup().location]"
      },
      {
        "apiVersion": "2020-06-01",
        "name": "pid-83aa3159-4e9b-42c0-a43f-1410cd90ef1e-partnercenter",
        "type": "Microsoft.Resources/deployments",
        "properties": {
          "mode": "Incremental",
          "template": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "resources": []
          }
        }
      },
      {
        "name": "AppInsights",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('appInsightsTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[parameters('appInsightsName')]"
            },
            "type": {
              "value": "web"
            },
            "regionId": {
              "value": "[parameters('appInsightsLocation')]"
            },
            "requestSource": {
              "value": "IbizaAIExtension"
            }
          }
        }
      },
      {
        "name": "KeyVault",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[parameters('keyVaultName')]"
            },
            "location": {
              "value": "[parameters('keyVaultLocation')]"
            },
            "sku": {
              "value": "[parameters('keyVaultSku')]"
            },
            "enabledForDeployment": {
              "value": false
            },
            "enabledForTemplateDeployment": {
              "value": true
            },
            "enabledForDiskEncryption": {
              "value": false
            },
            "enableRbacAuthorization": {
              "value": false
            },
            "enableSoftDelete": {
              "value": true
            },
            "softDeleteRetentionInDays": {
              "value": 90
            },
            "networkAcls": {
              "value": {
                "defaultAction": "allow",
                "bypass": "AzureServices",
                "ipRules": [],
                "virtualNetworkRules": []
              }
            }
          }
        }
      },
      {
        "name": "StorageML",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[parameters('mlStorageAccountName')]"
            },
            "sku": {
              "value": "[parameters('mlStorageAccountSku')]"
            },
            "location": {
              "value": "[parameters('mlStorageLocation')]"
            },
            "blobAllowedOrigins": {
              "value": [
                "*"
              ]
            },
            "blobAllowedMethods": {
              "value": [
                "DELETE",
                "GET",
                "HEAD",
                "MERGE",
                "OPTIONS",
                "POST",
                "PUT"
              ]
            },
            "blobMaxAge": {
              "value": 0
            },
            "blobExposedHeaders": {
              "value": [
                "*"
              ]
            },
            "blobAllowedHeaders": {
              "value": [
                "*"
              ]
            }
          }
        }
      },
      {
        "name": "MLBlobServiceContainerMLStorage",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageML"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageBlobContainerTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageML').outputs.accountName.value]"
            },
            "containerName": {
              "value": "azureml-blobstore-dipmlstorage"
            }
          }
        }
      },
      {
        "name": "StorageTraining",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[parameters('trainingStorageName')]"
            },
            "sku": {
              "value": "[parameters('trainingStorageSku')]"
            },
            "location": {
              "value": "[parameters('trainingStorageLocation')]"
            },
            "blobAllowedOrigins": {
              "value": [
                "*"
              ]
            },
            "blobAllowedMethods": {
              "value": [
                "DELETE",
                "GET",
                "HEAD",
                "MERGE",
                "OPTIONS",
                "POST",
                "PUT"
              ]
            },
            "blobMaxAge": {
              "value": 0
            },
            "blobExposedHeaders": {
              "value": [
                "*"
              ]
            },
            "blobAllowedHeaders": {
              "value": [
                "*"
              ]
            }
          }
        }
      },
      {
        "name": "TrainingBlobServiceContainerTrain",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageTraining"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageBlobContainerTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageTraining').outputs.accountName.value]"
            },
            "containerName": {
              "value": "train"
            }
          }
        }
      },
      {
        "name": "StorageProcessing",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[parameters('processingStorageName')]"
            },
            "sku": {
              "value": "[parameters('processingStorageSku')]"
            },
            "location": {
              "value": "[parameters('processingStorageLocation')]"
            },
            "blobAllowedOrigins": {
              "value": [
                "*"
              ]
            },
            "blobAllowedMethods": {
              "value": [
                "DELETE",
                "GET",
                "HEAD",
                "MERGE",
                "OPTIONS",
                "POST",
                "PUT"
              ]
            },
            "blobMaxAge": {
              "value": 0
            },
            "blobExposedHeaders": {
              "value": [
                "*"
              ]
            },
            "blobAllowedHeaders": {
              "value": [
                "*"
              ]
            }
          }
        }
      },
      {
        "name": "ProcessingBlobServiceContainerDocuments",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageBlobContainerTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "containerName": {
              "value": "documents"
            }
          }
        }
      },
      {
        "name": "ProcessingBlobServiceContainerDeploymentAssets",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageBlobContainerTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "containerName": {
              "value": "deployment-assets"
            }
          }
        }
      },
      {
        "name": "ProcessingBlobServiceContainerAuditLogs",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageBlobContainerTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "containerName": {
              "value": "auditlogs"
            }
          }
        }
      },
      {
        "name": "StorageProcessingPublished",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[parameters('publishedStorageName')]"
            },
            "sku": {
              "value": "[parameters('publishedStorageSku')]"
            },
            "location": {
              "value": "[parameters('publishedStorageLocation')]"
            },
            "blobAllowedOrigins": {
              "value": [
                "*"
              ]
            },
            "blobAllowedMethods": {
              "value": [
                "DELETE",
                "GET",
                "HEAD",
                "MERGE",
                "OPTIONS",
                "POST",
                "PUT"
              ]
            },
            "blobMaxAge": {
              "value": 0
            },
            "blobExposedHeaders": {
              "value": [
                "*"
              ]
            },
            "blobAllowedHeaders": {
              "value": [
                "*"
              ]
            }
          }
        }
      },
      {
        "name": "ProcessingPublishedBlobServiceContainerDocuments",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessingPublished"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageBlobContainerTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessingPublished').outputs.accountName.value]"
            },
            "containerName": {
              "value": "documents"
            }
          }
        }
      },
      {
        "name": "ProcessingQueueClassifier",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageQueueTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "queueName": {
              "value": "classifier"
            }
          }
        }
      },
      {
        "name": "ProcessingQueueClassProcessing",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageQueueTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "queueName": {
              "value": "classprocessing"
            }
          }
        }
      },
      {
        "name": "ProcessingQueueClassRetention",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageQueueTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "queueName": {
              "value": "retention"
            }
          }
        }
      },
      {
        "name": "ProcessingQueueFormsRecognizer",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageQueueTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "queueName": {
              "value": "formsrecognizer"
            }
          }
        }
      },
      {
        "name": "ProcessingQueueImageUploadFailure",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageQueueTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "queueName": {
              "value": "imageuploadfailure"
            }
          }
        }
      },
      {
        "name": "ProcessingQueueLuis",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageQueueTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "queueName": {
              "value": "luis"
            }
          }
        }
      },
      {
        "name": "ProcessingQueueNextStep",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageQueueTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "queueName": {
              "value": "nextstep"
            }
          }
        }
      },
      {
        "name": "ProcessingQueueStepsCompleted",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageQueueTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "queueName": {
              "value": "stepscompleted"
            }
          }
        }
      },
      {
        "name": "ProcessingQueueRetention",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageQueueTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "queueName": {
              "value": "retention"
            }
          }
        }
      },
      {
        "name": "ProcessingQueueWebhooks",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageQueueTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "queueName": {
              "value": "webhooks"
            }
          }
        }
      },
      {
        "name": "ProcessingQueueTextClassifier",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageQueueTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "queueName": {
              "value": "textclassifier"
            }
          }
        }
      },
      {
        "name": "ProcessingQueueStart",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageQueueTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "queueName": {
              "value": "start"
            }
          }
        }
      },
      {
        "name": "ProcessingQueueClassificationTrainingComplete",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageQueueTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "queueName": {
              "value": "classification-training-complete"
            }
          }
        }
      },
      {
        "name": "ProcessingQueueRenameDocumentType",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageQueueTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "queueName": {
              "value": "renamedocumenttype"
            }
          }
        }
      },
      {
        "name": "ProcessingQueueInvoice",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageQueueTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "queueName": {
              "value": "invoice"
            }
          }
        }
      },
      {
        "name": "ProcessingQueueKeyValuePair",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageQueueTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "queueName": {
              "value": "keyvaluepair"
            }
          }
        }
      },
      {
        "name": "ProcessingQueueAggregate",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageQueueTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "queueName": {
              "value": "aggregate"
            }
          }
        }
      },
      {
        "name": "ProcessingQueueTemplatelesstable",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('storageQueueTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "queueName": {
              "value": "templatelesstable"
            }
          }
        }
      },
      
      {
        "name": "CosmosDB",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('cosmosDBTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[parameters('cosmosDBName')]"
            },
            "location": {
              "value": "[parameters('cosmosDBLocation')]"
            },
            "locationName": {
              "value": "[parameters('cosmosDBLocationName')]"
            },
            "defaultExperience": {
              "value": "Core (SQL)"
            },
            "isZoneRedundant": {
              "value": "false"
            },
            "enableFreeTier": {
              "value": false
            }
          }
        }
      },
      {
        "name": "CosmosDBSQLDB",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "CosmosDB"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('cosmosDBSQLDBTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "databaseAccountName": {
              "value": "[reference('CosmosDB').outputs.accountName.value]"
            },
            "databaseName": {
              "value": "applicationdatacollection"
            }
          }
        }
      },
      {
        "name": "CosmosDBSQLDBContainerDocumentData",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "CosmosDBSQLDB"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('cosmosDBSQLDBContainerTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "databaseAccountName": {
              "value": "[reference('CosmosDB').outputs.accountName.value]"
            },
            "databaseName": {
              "value": "[reference('CosmosDBSQLDB').outputs.name.value]"
            },
            "containerName": {
              "value": "documentdata"
            },
            "partitionKey": {
              "value": "/type"
            }
          }
        }
      },
      {
        "name": "CosmosDBSQLDBContainerConfigurations",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "CosmosDBSQLDB"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('cosmosDBSQLDBContainerTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "databaseAccountName": {
              "value": "[reference('CosmosDB').outputs.accountName.value]"
            },
            "databaseName": {
              "value": "[reference('CosmosDBSQLDB').outputs.name.value]"
            },
            "containerName": {
              "value": "configurations"
            },
            "partitionKey": {
              "value": "/type"
            }
          }
        }
      },
      {
        "name": "CosmosDBSQLDBContainerMetAM",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "CosmosDBSQLDB"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('cosmosDBSQLDBContainerTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "databaseAccountName": {
              "value": "[reference('CosmosDB').outputs.accountName.value]"
            },
            "databaseName": {
              "value": "[reference('CosmosDBSQLDB').outputs.name.value]"
            },
            "containerName": {
              "value": "metam"
            },
            "partitionKey": {
              "value": "/yearmonth"
            }
          }
        }
      },
      {
        "name": "CosmosDBSQLDBContainerConfigurationsConvertToNumberUDF",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "CosmosDBSQLDBContainerConfigurations"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('CosmosDBSQLDBContainerUDFTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "databaseAccountName": {
              "value": "[reference('CosmosDB').outputs.accountName.value]"
            },
            "databaseName": {
              "value": "[reference('CosmosDBSQLDB').outputs.name.value]"
            },
            "containerName": {
              "value": "[reference('CosmosDBSQLDBContainerConfigurations').outputs.name.value]"
            },
            "udfName": {
              "value": "convertToNumber"
            },
            "udfBody": {
              "value": "function convertToNumber(input)\r\n{\r\n    if(input && input > 0)\r\n    {\r\n        return Number(input);\r\n    }\r\n   return 0;\r\n}"
            }
          }
        }
      },
      {
        "name": "AppServicePlanUI",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('appServicePlanTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[parameters('webAppServicePlanName')]"
            },
            "location": {
              "value": "[parameters('webAppLocation')]"
            },
            "kind": {
              "value": "linux"
            },
            "reserved": {
              "value": true
            },
            "sku": {
              "value": "Standard"
            },
            "skuCode": {
              "value": "S1"
            },
            "workerSize": {
              "value": "3"
            },
            "workerSizeId": {
              "value": "3"
            },
            "numberOfWorkers": {
              "value": "1"
            }
          }
        }
      },
      {
        "name": "WebApp",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "AppServicePlanUI"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('webAppTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[parameters('webAppName')]"
            },
            "location": {
              "value": "[parameters('webAppLocation')]"
            },
            "hostingPlanName": {
              "value": "[parameters('webAppServicePlanName')]"
            },
            "alwaysOn": {
              "value": true
            },
            "linuxFxVersion": {
              "value": "NODE|14-lts"
            }
          }
        }
      },
      {
        "name": "ComputerVision",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('cognitiveServiceTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[parameters('computerVisionName')]"
            },
            "location": {
              "value": "[parameters('computerVisionLocation')]"
            },
            "sku": {
              "value": "S1"
            },
            "kind": {
              "value": "ComputerVision"
            }
          }
        }
      },
      {
        "name": "FormRecognizer",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('cognitiveServiceTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[parameters('formRecognizerName')]"
            },
            "location": {
              "value": "[parameters('formRecognizerLocation')]"
            },
            "sku": {
              "value": "S0"
            },
            "kind": {
              "value": "FormRecognizer"
            }
          }
        }
      },
      {
        "name": "LuisPrediction",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('cognitiveServiceTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[parameters('luisPredictionName')]"
            },
            "location": {
              "value": "[parameters('luisLocation')]"
            },
            "sku": {
              "value": "S0"
            },
            "kind": {
              "value": "LUIS"
            }
          }
        }
      },
      {
        "name": "LuisAuthoring",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('cognitiveServiceTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[parameters('luisAuthoringName')]"
            },
            "location": {
              "value": "[parameters('luisLocationAuthoring')]"
            },
            "sku": {
              "value": "F0"
            },
            "kind": {
              "value": "LUIS.Authoring"
            }
          }
        }
      },
      {
        "name": "SignalR",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('signalRTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[parameters('signalRName')]"
            },
            "location": {
              "value": "[parameters('signalRLocation')]"
            },
            "skuName": {
              "value": "Standard_S1"
            },
            "skuTier": {
              "value": "Standard"
            },
            "skuSize": {
              "value": "S1"
            },
            "skuCapacity": {
              "value": 1
            },
            "kind": {
              "value": "SignalR"
            },
            "serverlessMode": {
              "value": "Serverless"
            }
          }
        }
      },
      {
        "name": "MachineLearningService",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "StorageML",
          "ContainerRegistry",
          "KeyVault",
          "AppInsights"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('machineLearningTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[parameters('machineLearningName')]"
            },
            "location": {
              "value": "[parameters('resourceGroupLocation')]"
            },
            "storageAccountResourceId": {
              "value": "[reference('StorageML').outputs.resourceId.value]"
            },
            "containerRegistryResourceId": {
              "value": "[reference('ContainerRegistry').outputs.resourceId.value]"
            },
            "keyVaultResourceId": {
              "value": "[reference('KeyVault').outputs.resourceId.value]"
            },
            "appInsightsResourceId": {
              "value": "[reference('AppInsights').outputs.resourceId.value]"
            },
            "userDefinedIdentityResourceId": {
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('identityName'))]"
            },
            "tags": {
              "value": {}
            }
          }
        }
      },
      {
        "name": "ContainerRegistry",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('containerRegistryTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[parameters('containerRegistryName')]"
            },
            "location": {
              "value": "[parameters('containerRegistryLocation')]"
            }
          }
        }
      },
      {
        "name": "MachineLearningCompute",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "MachineLearningService"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('machineLearningComputeTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[concat(reference('MachineLearningService').outputs.accountName.value,'/comp')]"
            },
            "location": {
              "value": "[parameters('machineLearningComputeLocation')]"
            },
            "computeType": {
              "value": "AmlCompute"
            },
            "vmSize": {
              "value": "STANDARD_NC6"
            },
            "vmPriority": {
              "value": "Dedicated"
            },
            "maxNodeCount": {
              "value": 1
            },
            "minNodeCount": {
              "value": 0
            },
            "nodeIdleTimeBeforeScaleDown": {
              "value": "PT1M"
            }
          }
        }
      },
      {
        "name": "AppServicePlanOrchestration",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "AppInsights",
          "WebApp"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('appServicePlanTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[concat(parameters('orchestrationHostingPlanName'))]"
            },
            "location": {
              "value": "[concat(parameters('orchestrationFunctionAppLocation'))]"
            },
            "sku": {
              "value": "Standard"
            },
            "skuCode": {
              "value": "S1"
            },
            "workerSize": {
              "value": "0"
            },
            "workerSizeId": {
              "value": "0"
            },
            "numberOfWorkers": {
              "value": "1"
            }
          }
        }
      },
      {
        "name": "OrchestrationFunctionApp",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "AppInsights",
          "StorageTraining",
          "StorageProcessing",
          "CosmosDB",
          "AppServicePlanOrchestration"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('functionAppTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[concat(parameters('orchestrationFunctionAppName'))]"
            },
            "location": {
              "value": "[concat(parameters('orchestrationFunctionAppLocation'))]"
            },
            "hostingPlanName": {
              "value": "[concat(parameters('orchestrationHostingPlanName'))]"
            },
            "alwaysOn": {
              "value": true
            }
          }
        }
      },
      {
        "name": "orchestrationFunctionAppConfig",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "OrchestrationFunctionApp",
          "WebApp"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('functionAppConfigTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[reference('orchestrationFunctionApp').outputs.accountName.value]"
            },
            "location": {
              "value": "[reference('orchestrationFunctionApp').outputs.location.value]"
            },
            "webAppUrl": {
              "value": "[reference('WebApp').outputs.webAppUrl.value]"
            }
          }
        }
      },
      {
        "name": "AppServicePlanModules",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "AppInsights",
          "WebApp"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('appServicePlanTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[concat(parameters('modulesHostingPlanName'))]"
            },
            "location": {
              "value": "[concat(parameters('modulesFunctionAppLocation'))]"
            },
            "sku": {
              "value": "Standard"
            },
            "skuCode": {
              "value": "S1"
            },
            "workerSize": {
              "value": "0"
            },
            "workerSizeId": {
              "value": "0"
            },
            "numberOfWorkers": {
              "value": "1"
            }
          }
        }
      },
      {
        "name": "AppServicePlanCustomML",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "AppInsights"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('appServicePlanTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[concat(parameters('customMLHostingPlanName'))]"
            },
            "location": {
              "value": "[concat(parameters('customMLFunctionAppLocation'))]"
            },
            "sku": {
              "value": "ElasticPremium"
            },
            "skuCode": {
              "value": "EP1"
            },
            "workerSize": {
              "value": "0"
            },
            "workerSizeId": {
              "value": "0"
            },
            "numberOfWorkers": {
              "value": "1"
            },
            "reserved": {
              "value": true
            },
            "kind": {
              "value": "elastic"
            }
          }
        }
      },
      {
        "name": "CustomMLFunctionApp",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "AppInsights",
          "StorageML",
          "AppServicePlanCustomML",
          "ContainerRegistry"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('functionAppContainerTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[concat(parameters('customMLFunctionAppName'))]"
            },
            "location": {
              "value": "[concat(parameters('customMLFunctionAppLocation'))]"
            },
            "kind": {
              "value": "functionapp,linux,container"
            },
            "hostingPlanName": {
              "value": "[concat(parameters('customMLHostingPlanName'))]"
            },
            "alwaysOn": {
              "value": false
            },
            "reserved": {
              "value": true
            },
            "containerRegistryPassword": {
              "value": "[reference('ContainerRegistry').outputs.registryPassword.value]"
            },
            "containerRegistryUrl": {
              "value": "[reference('ContainerRegistry').outputs.registryUrl.value]"
            },
            "containerRegistryUsername": {
              "value": "[reference('ContainerRegistry').outputs.registryUsername.value]"
            },
            "linuxFxVersion": {
              "value": "[concat('DOCKER|',reference('ContainerRegistry').outputs.registryUrl.value,'/training/textclassification:latest')]"
            }
          }
        }
      },
      {
        "name": "CustomMLFunctionAppSettings",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "AppInsights",
          "ContainerRegistry",
          "CustomMLFunctionApp",
          "KeyVault",
          "MachineLearningCompute",
          "MachineLearningService",
          "StorageML",
          "StorageProcessing",
          "KVSAppInsightsInstrumentationKey"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('customMLFunctionAppTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "azureWebJobsStorage": {
              "value": "[reference('StorageML').outputs.connectionString.value]"
            },
            "functionAppName": {
              "value": "[reference('CustomMLFunctionApp').outputs.accountName.value]"
            },
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "appInsightsString": {
              "value": "[reference('AppInsights').outputs.connectionString.value]"
            },
            "appInsightsKey": {
              "value": "[reference('AppInsights').outputs.instrumentationKey.value]"
            },
            "computeClusterName": {
              "value": "[reference('MachineLearningCompute').outputs.accountName.value]"
            },
            "containerRegistryPassword": {
              "value": "[reference('ContainerRegistry').outputs.registryPassword.value]"
            },
            "containerRegistryUrl": {
              "value": "[reference('ContainerRegistry').outputs.registryUrl.value]"
            },
            "containerRegistryUsername": {
              "value": "[reference('ContainerRegistry').outputs.registryUsername.value]"
            },
            "processingStorageKey": {
              "value": "[reference('StorageProcessing').outputs.accountKey.value]"
            },
            "processingStorageAccountName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "processingStorageConnectionString": {
              "value": "[reference('StorageProcessing').outputs.connectionString.value]"
            },
            "mlWorkspaceName": {
              "value": "[reference('MachineLearningService').outputs.accountName.value]"
            },
            "machineLearningDatastoreName": {
              "value": "[parameters('machineLearningDatastoreName')]"
            }
          }
        }
      },
      {
        "name": "modulesFunctionApp",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "AppInsights",
          "StorageTraining",
          "StorageProcessing",
          "CosmosDB",
          "AppServicePlanModules"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('functionAppTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[concat(parameters('modulesFunctionAppName'))]"
            },
            "location": {
              "value": "[concat(parameters('modulesFunctionAppLocation'))]"
            },
            "hostingPlanName": {
              "value": "[concat(parameters('modulesHostingPlanName'))]"
            }
          }
        }
      },
      {
        "name": "KeyVaultAccessPolicyOrchestration",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "OrchestrationFunctionApp"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultAccessPolicyFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "accessPolicies": {
              "value": [{
                "objectId": "[reference('OrchestrationFunctionApp').outputs.principalId.value]",
                "tenantId": "[subscription().tenantId]",
                "permissions": {
                  "keys": [],
                  "secrets": [
                    "List",
                    "Get"
                  ],
                  "certificates": []
                },
                "applicationId": null
              }]
            }
          }
        }
      },
      {
        "name": "KeyVaultAccessPolicyModules",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "ModulesFunctionApp"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultAccessPolicyFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "accessPolicies": {
              "value": [{
                "objectId": "[reference('ModulesFunctionApp').outputs.principalId.value]",
                "tenantId": "[subscription().tenantId]",
                "permissions": {
                  "keys": [],
                  "secrets": [
                    "List",
                    "Get"
                  ],
                  "certificates": []
                },
                "applicationId": null
              }]
            }
          }
        }
      },
      {
        "name": "KeyVaultAccessPolicyWebApp",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "WebApp"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultAccessPolicyFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "accessPolicies": {
              "value": [{
                "objectId": "[reference('WebApp').outputs.principalId.value]",
                "tenantId": "[subscription().tenantId]",
                "permissions": {
                  "keys": [],
                  "secrets": [
                    "List",
                    "Get"
                  ],
                  "certificates": []
                },
                "applicationId": null
              }]
            }
          }
        }
      },
      {
        "name": "KVSAppInsightsInstrumentationKey",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "AppInsights"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "APPINSIGHTS-INSTRUMENTATIONKEY"
            },
            "secretValue": {
              "value": "[reference('AppInsights').outputs.instrumentationKey.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSAppInsightsConnectionString",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "AppInsights"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "APPLICATIONINSIGHTS-CONNECTION-STRING"
            },
            "secretValue": {
              "value": "[reference('AppInsights').outputs.connectionString.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSAppSecurityClientId",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "APP-SECURITY-CLIENT-ID"
            },
            "secretValue": {
              "value": ""
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSAppSecurityClientSecret",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "APP-SECURITY-CLIENT-SECRET"
            },
            "secretValue": {
              "value": ""
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSAppSecurityTennantId",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "APP-SECURITY-TENANT-ID"
            },
            "secretValue": {
              "value": "[subscription().tenantId]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSAzureWebJobsStorage",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "AzureWebJobsStorage"
            },
            "secretValue": {
              "value": "[reference('StorageProcessing').outputs.connectionString.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSCosmosConnectionString",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "CosmosDB"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "COSMOS-CONNECTION-STRING"
            },
            "secretValue": {
              "value": "[reference('CosmosDB').outputs.connectionString.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSCosmosDBID",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "CosmosDBSQLDB"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "COSMOS-DB-ID"
            },
            "secretValue": {
              "value": "[reference('CosmosDBSQLDB').outputs.name.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSCosmosKey",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "CosmosDB"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "COSMOS-KEY"
            },
            "secretValue": {
              "value": "[reference('CosmosDB').outputs.accountKey.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSCosmosUri",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "CosmosDB"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "COSMOS-URI"
            },
            "secretValue": {
              "value": "[reference('CosmosDB').outputs.uri.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSCosmosAccountEndPoint",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "CosmosDB"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "COSMOS-ACCOUNT-ENDPOINT"
            },
            "secretValue": {
              "value": "[reference('CosmosDB').outputs.documentEndpoint.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSCustomVisionEndpointPrediction",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "CUSTOM-VISION-ENDPOINT-PREDICTION"
            },
            "secretValue": {
              "value": ""
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSCustomVisionKeyPrediction",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "CUSTOM-VISION-KEY-PREDICTION"
            },
            "secretValue": {
              "value": ""
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSCustomVisionEndpointTraining",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "CUSTOM-VISION-ENDPOINT-TRAINING"
            },
            "secretValue": {
              "value": ""
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSCustomVistionKeyTraining",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "CUSTOM-VISION-KEY-TRAINING"
            },
            "secretValue": {
              "value": ""
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSCustomVistionProjectID",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "CUSTOM-VISION-PROJECT-ID"
            },
            "secretValue": {
              "value": "<not-set>"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSCustomVistionResourceIDPrediction",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "CUSTOM-VISION-RESOURCE-ID-PREDICTION"
            },
            "secretValue": {
              "value": ""
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSCustomVistionResourceIDTraining",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "CUSTOM-VISION-RESOURCE-ID-TRAINING"
            },
            "secretValue": {
              "value": ""
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSCustomVistionPipelinePublishedResourceID",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "CUSTOM-VISION-PIPELINE-PUBLISHED-RESOURCEID"
            },
            "secretValue": {
              "value": ""
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSCustomVistionPipelineTrainingResourceID",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "CUSTOM-VISION-PIPELINE-TRAINING-RESOURCEID"
            },
            "secretValue": {
              "value": ""
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSFormRecognizerEndpoint",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "FormRecognizer"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "FORMS-RECOGNIZER-ENDPOINT"
            },
            "secretValue": {
              "value": "[reference('FormRecognizer').outputs.endpoint.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSFormRecognizerKey",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "FormRecognizer"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "FORMS-RECOGNIZER-KEY"
            },
            "secretValue": {
              "value": "[reference('FormRecognizer').outputs.accountKey.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSLuisAppId",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "LuisAuthoring",
          "LuisPrediction"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "LUIS-APP-ID"
            },
            "secretValue": {
              "value": "<not-set>"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSLuisEndpointAuthoring",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "LuisAuthoring"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "LUIS-ENDPOINT-AUTHORING"
            },
            "secretValue": {
              "value": "[reference('LuisAuthoring').outputs.endpoint.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSLuisKeyAuthoring",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "LuisAuthoring"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "LUIS-KEY-AUTHORING"
            },
            "secretValue": {
              "value": "[reference('LuisAuthoring').outputs.accountKey.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSLuisEndpointPrediction",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "LuisPrediction"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "LUIS-ENDPOINT-PREDICTION"
            },
            "secretValue": {
              "value": "[reference('LuisPrediction').outputs.endpoint.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSLuisKeyPrediction",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "LuisPrediction"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "LUIS-KEY-PREDICTION"
            },
            "secretValue": {
              "value": "[reference('LuisPrediction').outputs.accountKey.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSStorageAccountNameProcessing",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "STORAGE-ACCOUNT-NAME-PROCESSING"
            },
            "secretValue": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSStorageAccountConnectionStringProcessing",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "STORAGE-ACCOUNT-CONNECTION-STRING-PROCESSING"
            },
            "secretValue": {
              "value": "[reference('StorageProcessing').outputs.connectionString.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSStorageAccountConnectionStringProduction",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "StorageProcessingPublished"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "STORAGE-ACCOUNT-CONNECTION-STRING-PRODUCTION"
            },
            "secretValue": {
              "value": "[reference('StorageProcessingPublished').outputs.connectionString.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSStorageAccountKeyProcessing",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "STORAGE-ACCOUNT-KEY-PROCESSING"
            },
            "secretValue": {
              "value": "[reference('StorageProcessing').outputs.accountKey.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSStorageAccountNameTraining",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "StorageTraining"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "STORAGE-ACCOUNT-NAME-TRAINING"
            },
            "secretValue": {
              "value": "[reference('StorageTraining').outputs.accountName.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSStorageAccountConnectionStringTraining",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "StorageTraining"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "STORAGE-ACCOUNT-CONNECTION-STRING-TRAINING"
            },
            "secretValue": {
              "value": "[reference('StorageTraining').outputs.connectionString.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSStorageAccountKeyTraining",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "StorageTraining"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "STORAGE-ACCOUNT-KEY-TRAINING"
            },
            "secretValue": {
              "value": "[reference('StorageTraining').outputs.accountKey.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSStorageBlobStorageUrlTraining",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "ProcessingBlobServiceContainerDocuments"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "STORAGE-BLOB-STORAGE-URL-TRAINING"
            },
            "secretValue": {
              "value": "[reference('StorageProcessing').outputs.blobEndpoint.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSStorageAccountConnecionStringPipelineTrainingProcessing",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "STORAGE-ACCOUNT-CONNECTION-STRING-PIPELINE-TRAINING-PROCESSING"
            },
            "secretValue": {
              "value": "[reference('StorageProcessing').outputs.connectionString.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSStorageAccountConnecionStringPipelinePublishedProcessing",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "STORAGE-ACCOUNT-CONNECTION-STRING-PIPELINE-PUBLISHED-PROCESSING"
            },
            "secretValue": {
              "value": "[reference('StorageProcessingPublished').outputs.connectionString.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSStorageAccountKeyDIPQueue",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "STORAGE-ACCOUNT-KEY-DIP-QUEUE"
            },
            "secretValue": {
              "value": "[reference('StorageProcessing').outputs.accountKey.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSStorageAccountNameDIPQueue",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "STORAGE-ACCOUNT-NAME-DIP-QUEUE"
            },
            "secretValue": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSComputerVisionEndpoint",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "StorageProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "COMPUTER-VISION-ENDPOINT"
            },
            "secretValue": {
              "value": "[reference('ComputerVision').outputs.endpoint.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSComputerVisionKey",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "ComputerVision"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "COMPUTER-VISION-KEY"
            },
            "secretValue": {
              "value": "[reference('ComputerVision').outputs.accountKey.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSTextClassificationTrainingEndpoint",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "CustomMLFunctionApp"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "TEXT-CLASSIFICATION-TRAINING-ENDPOINT"
            },
            "secretValue": {
              "value": "[concat(reference('CustomMLFunctionApp').outputs.url.value,'/api/DocumentClassification?code=',reference('CustomMLFunctionApp').outputs.masterKey.value)]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSStorageAccountConnectionStringTextClassificationTraining",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "StorageML"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "STORAGE-ACCOUNT-CONNECTION-STRING-TEXT-CLASSIFICATION-TRAINING"
            },
            "secretValue": {
              "value": "[reference('StorageML').outputs.connectionString.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "KVSTextClassificationTrainingStorageURL",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault",
          "KeyVaultAccessPolicyOrchestration",
          "KeyVaultAccessPolicyModules",
          "StorageML"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultSecretTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "secretName": {
              "value": "TEXT-CLASSIFICATION-TRAINING-STORAGE-URL"
            },
            "secretValue": {
              "value": "[reference('StorageML').outputs.blobEndpoint.value]"
            },
            "location": {
              "value": "[reference('KeyVault').outputs.location.value]"
            }
          }
        }
      },
      {
        "name": "OrchestrationFunctionAppAppSettings",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "OrchestrationFunctionApp",
          "SignalR",
          "KVSCustomVistionPipelinePublishedResourceID",
          "KVSStorageAccountKeyDIPQueue",
          "KeyVaultAccessPolicyOrchestration",
          "KVSStorageAccountNameDIPQueue",
          "KVSAppInsightsInstrumentationKey",
          "KVSAppInsightsConnectionString",
          "KVSAppSecurityTennantId",
          "KVSAppSecurityClientSecret",
          "KVSAppSecurityClientId",
          "KVSAzureWebJobsStorage",
          "KVSCosmosConnectionString",
          "KVSCosmosDBID",
          "KVSCosmosKey",
          "KVSCosmosUri",
          "KVSCosmosAccountEndPoint",
          "KVSCustomVisionEndpointPrediction",
          "KVSCustomVisionKeyPrediction",
          "KVSCustomVisionEndpointTraining",
          "KVSCustomVistionKeyTraining",
          "KVSCustomVistionProjectID",
          "KVSCustomVistionResourceIDPrediction",
          "KVSCustomVistionResourceIDTraining",
          "KVSFormRecognizerEndpoint",
          "KVSFormRecognizerKey",
          "KVSLuisAppId",
          "KVSLuisEndpointAuthoring",
          "KVSLuisKeyAuthoring",
          "KVSLuisEndpointPrediction",
          "KVSLuisKeyPrediction",
          "KVSStorageAccountNameProcessing",
          "KVSStorageAccountConnectionStringProcessing",
          "KVSStorageAccountKeyProcessing",
          "KVSStorageAccountNameTraining",
          "KVSStorageAccountConnectionStringTraining",
          "KVSStorageAccountKeyTraining",
          "KVSStorageBlobStorageUrlTraining",
          "KVSStorageAccountConnecionStringPipelineTrainingProcessing",
          "KVSStorageAccountConnecionStringPipelinePublishedProcessing",
          "KVSStorageAccountConnectionStringProduction",
          "KVSComputerVisionEndpoint",
          "KVSComputerVisionKey",
          "KVSTextClassificationTrainingEndpoint",
          "ProcessingBlobServiceContainerDeploymentAssets",
          "KVSStorageAccountConnectionStringTextClassificationTraining",
          "KVSTextClassificationTrainingStorageURL",
          "MLBlobServiceContainerMLStorage"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('orchestrationFunctionAppSettingsTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "functionAppName": {
              "value": "[reference('OrchestrationFunctionApp').outputs.accountName.value]"
            },
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "appInsightsString": {
              "value": "[reference('AppInsights').outputs.connectionString.value]"
            },
            "azureWebJobsStorage": {
              "value": "[reference('StorageProcessing').outputs.connectionString.value]"
            },
            "signalRConnectionString": {
              "value": "[reference('SignalR').outputs.connectionString.value]"
            },
            "mlStorageContainerName": {
              "value": "[reference('MLBlobServiceContainerMLStorage').outputs.name.value]"
            },
            "deploymentAssetsContainerName": {
              "value": "[reference('ProcessingBlobServiceContainerDeploymentAssets').outputs.name.value]"
            },
            "DEPLOYMENT_CONFIG_FILE_PATH": {
              "value": "[concat(parameters('deploymentAssetPath'),'/',parameters('deploymentConfigurationFileName'))]"
            },
            "DEPLOYMENT_ASSETS_URL": {
              "value": "[uri(parameters('_artifactsLocation'),'')]"
            },
            "DEPLOYMENT_ASSETS_SAS_TOKEN": {
              "value": "[parameters('_artifactsLocationSasToken')]"
            },
            "STORAGE_CONTAINER_NAME_LOG": {
              "value": "[parameters('STORAGE_CONTAINER_NAME_LOG')]"
            },
            "COMPUTER_VISION_VERSION_URL": {
              "value": "[parameters('COMPUTER_VISION_VERSION_URL')]"
            },
            "orchestrationFunctionKey": {
              "value": "[reference('OrchestrationFunctionApp').outputs.masterKey.value]"
            },
            "orchestrationFunctionUrl": {
              "value": "[reference('OrchestrationFunctionApp').outputs.url.value]"
            },
            "isSameTenantDeployment": {
              "value": "[variables('isSameTenantDeployment')]"
            }
          }
        }
      },
      {
        "name": "ModulesFunctionAppAppSettings",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "ModulesFunctionApp",
          "OrchestrationFunctionApp",
          "SignalR",
          "KVSCustomVistionPipelinePublishedResourceID",
          "KVSStorageAccountKeyDIPQueue",
          "KVSStorageAccountNameDIPQueue",
          "KeyVaultAccessPolicyModules",
          "KVSAppInsightsInstrumentationKey",
          "KVSAppInsightsConnectionString",
          "KVSAppSecurityTennantId",
          "KVSAppSecurityClientSecret",
          "KVSAppSecurityClientId",
          "KVSAzureWebJobsStorage",
          "KVSCosmosConnectionString",
          "KVSCosmosDBID",
          "KVSCosmosKey",
          "KVSCosmosUri",
          "KVSCosmosAccountEndPoint",
          "KVSCustomVisionEndpointPrediction",
          "KVSCustomVisionKeyPrediction",
          "KVSCustomVisionEndpointTraining",
          "KVSCustomVistionKeyTraining",
          "KVSCustomVistionProjectID",
          "KVSCustomVistionResourceIDPrediction",
          "KVSCustomVistionResourceIDTraining",
          "KVSFormRecognizerEndpoint",
          "KVSFormRecognizerKey",
          "KVSLuisAppId",
          "KVSLuisEndpointAuthoring",
          "KVSLuisKeyAuthoring",
          "KVSLuisEndpointPrediction",
          "KVSLuisKeyPrediction",
          "KVSStorageAccountNameProcessing",
          "KVSStorageAccountConnectionStringProcessing",
          "KVSStorageAccountKeyProcessing",
          "KVSStorageAccountNameTraining",
          "KVSStorageAccountConnectionStringTraining",
          "KVSStorageAccountKeyTraining",
          "KVSStorageBlobStorageUrlTraining",
          "KVSStorageAccountConnecionStringPipelineTrainingProcessing",
          "KVSStorageAccountConnecionStringPipelinePublishedProcessing"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('modulesFunctionAppSettingsTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "functionAppName": {
              "value": "[reference('ModulesFunctionApp').outputs.accountName.value]"
            },
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "appInsightsString": {
              "value": "[reference('AppInsights').outputs.connectionString.value]"
            },
            "signalRConnectionString": {
              "value": "[reference('SignalR').outputs.connectionString.value]"
            },
            "orchestrationFunctionKey": {
              "value": "[reference('OrchestrationFunctionApp').outputs.masterKey.value]"
            },
            "orchestrationFunctionUrl": {
              "value": "[reference('OrchestrationFunctionApp').outputs.url.value]"
            },
            "packageLocation": {
              "value": "[concat(reference('StorageProcessing').outputs.blobEndpoint.value,reference('ProcessingBlobServiceContainerDeploymentAssets').outputs.name.value,'/',parameters('deploymentAssetVersionNumber'),'/',parameters('deploymentAssetModulesFileName'))]"
            }
          }
        }
      },
      {
        "name": "WebAppSettings",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "WebApp",
          "SignalR",
          "KVSCustomVistionPipelinePublishedResourceID",
          "KVSStorageAccountKeyDIPQueue",
          "KVSStorageAccountNameDIPQueue",
          "KeyVaultAccessPolicyWebApp",
          "KVSAppInsightsInstrumentationKey",
          "KVSAppInsightsConnectionString",
          "KVSAppSecurityTennantId",
          "KVSAppSecurityClientSecret",
          "KVSAppSecurityClientId",
          "KVSAzureWebJobsStorage",
          "KVSCosmosConnectionString",
          "KVSCosmosDBID",
          "KVSCosmosKey",
          "KVSCosmosUri",
          "KVSCosmosAccountEndPoint",
          "KVSCustomVisionEndpointPrediction",
          "KVSCustomVisionKeyPrediction",
          "KVSCustomVisionEndpointTraining",
          "KVSCustomVistionKeyTraining",
          "KVSCustomVistionProjectID",
          "KVSCustomVistionResourceIDPrediction",
          "KVSCustomVistionResourceIDTraining",
          "KVSFormRecognizerEndpoint",
          "KVSFormRecognizerKey",
          "KVSLuisAppId",
          "KVSLuisEndpointAuthoring",
          "KVSLuisKeyAuthoring",
          "KVSLuisEndpointPrediction",
          "KVSLuisKeyPrediction",
          "KVSStorageAccountNameProcessing",
          "KVSStorageAccountConnectionStringProcessing",
          "KVSStorageAccountKeyProcessing",
          "KVSStorageAccountNameTraining",
          "KVSStorageAccountConnectionStringTraining",
          "KVSStorageAccountKeyTraining",
          "KVSStorageBlobStorageUrlTraining",
          "KVSStorageAccountConnecionStringPipelineTrainingProcessing",
          "KVSStorageAccountConnecionStringPipelinePublishedProcessing",
          "ProcessingBlobServiceContainerAuditLogs",
          "ProcessingBlobServiceContainerDeploymentAssets",
          "OrchestrationFunctionApp"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('webAppSettingsTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "appName": {
              "value": "[reference('WebApp').outputs.accountName.value]"
            },
            "functionAppUrl": {
              "value": "[reference('OrchestrationFunctionApp').outputs.url.value]"
            },
            "functionAppMasterKey": {
              "value": "[reference('OrchestrationFunctionApp').outputs.masterKey.value]"
            },
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "processingStorageName": {
              "value": "[reference('StorageProcessing').outputs.accountName.value]"
            },
            "auditLogContainerName": {
              "value": "[reference('ProcessingBlobServiceContainerAuditLogs').outputs.name.value]"
            },
            "signalRConnectionString": {
              "value": "[reference('SignalR').outputs.connectionString.value]"
            },
            "packageLocation": {
              "value": "[concat(reference('StorageProcessing').outputs.blobEndpoint.value,reference('ProcessingBlobServiceContainerDeploymentAssets').outputs.name.value,'/',parameters('deploymentAssetVersionNumber'),'/',parameters('deploymentAssetWebAppFileName'))]"
            }
          }
        }
      },
      {
        "name": "OrchestrationFunctionAppZipDeploy",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "OrchestrationFunctionApp",
          "OrchestrationFunctionAppAppSettings",
          "ML-FunctionAppUrl-Script"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('ZipDeployTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "WebAppName": {
              "value": "[reference('OrchestrationFunctionApp').outputs.accountName.value]"
            },
            "zipLocation": {
              "value": "[uri(parameters('_artifactsLocation'),concat(parameters('deploymentAssetPath'),'/',parameters('deploymentAssetOrchFileName'),parameters('_artifactsLocationSasToken')))]"
            }
          }
        }
      },
      {
        "name": "WebAppRoleAssignment",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-05-01",
        "dependsOn": [
          "WebApp",
          "StorageProcessing",
          "WebAppSettings"
        ],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('roleAssignmentTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "principalId": {
                    "value": "[reference('WebApp').outputs.principalId.value]"
                },
                "scope": {
                    "value": "[concat('Microsoft.Storage/storageAccounts', '/', parameters('processingStorageName'))]"
                },
                "scopeName": {
                    "value": "[concat(parameters('webAppName'),'-accessing-',parameters('processingStorageName'))]"
                },
                "roleDefinitionId": {
                    "value": "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1" 
                },
                "delegatedManagedIdentityResourceId": {
                    "value": "[if(not(empty(variables('isSameTenantDeployment'))), 'local', reference('WebApp').outputs.resourceId.value)]"
                }
            }
        }
      },
      {
        "name": "ModulesFunctionAppRoleAssignment",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-05-01",
        "dependsOn": [
          "ModulesFunctionApp",
          "StorageProcessing",
          "ModulesFunctionAppAppSettings"
        ],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('roleAssignmentTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "principalId": {
                    "value": "[reference('ModulesFunctionApp').outputs.principalId.value]"
                },
                "scope": {
                    "value": "[concat('Microsoft.Storage/storageAccounts', '/', parameters('processingStorageName'))]"
                },
                "scopeName": {
                    "value": "[concat(parameters('modulesFunctionAppName'),'-accessing-',parameters('processingStorageName'))]"
                },
                "roleDefinitionId": {
                    "value": "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1" 
                },
                "delegatedManagedIdentityResourceId": {
                    "value":  "[if(not(empty(variables('isSameTenantDeployment'))), 'local', reference('ModulesFunctionApp').outputs.resourceId.value)]"
                }
            }
        }
      },
      {
        "name": "MachineLearningRoleAssignment",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-05-01",
        "dependsOn": [
          "MachineLearningService",
          "MachineLearningCompute" 
        ],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('roleAssignmentTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "principalId": {
                    "value": "[reference('MachineLearningService').outputs.principalId.value]"
                },
                "scope": {
                    "value": "[resourceGroup().id]"
                },
                "scopeName": {
                    "value": "[concat(parameters('machineLearningName'),'as owner of RG')]"
                },
                "roleDefinitionId": {
                    "value": "[parameters('ownerRoleId')]"
                },
                "delegatedManagedIdentityResourceId": {
                    "value": "[if(not(empty(variables('isSameTenantDeployment'))), 'local', reference('MachineLearningService').outputs.resourceId.value)]"
                }
            }
        }
      },
      {
        "name": "OrchestrationAppResourceGroupRoleAssignment",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-05-01",
        "dependsOn": [
          "OrchestrationFunctionApp",
          "OrchestrationFunctionAppAppSettings"
        ],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('roleAssignmentTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "principalId": {
                    "value": "[reference('OrchestrationFunctionApp').outputs.principalId.value]"
                },
                "scope": {
                    "value": "[resourceGroup().id]"
                },
                "scopeName": {
                    "value": "[concat(parameters('orchestrationFunctionAppName'),'as owner of RG ',resourceGroup().name)]"
                },
                "roleDefinitionId": {
                    "value": "[parameters('ownerRoleId')]"
                },
                "delegatedManagedIdentityResourceId": {
                    "value": "[if(not(empty(variables('isSameTenantDeployment'))), 'local', reference('OrchestrationFunctionApp').outputs.resourceId.value)]"
                }
            }
        }
      },
      {
        "name": "CustomMLAppResourceGroupRoleAssignment",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-05-01",
        "dependsOn": [
          "CustomMLFunctionApp",
          "CustomMLFunctionAppSettings"
        ],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('roleAssignmentTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "principalId": {
                    "value": "[reference('CustomMLFunctionApp').outputs.principalId.value]"
                },
                "scope": {
                    "value": "[resourceGroup().id]"
                },
                "scopeName": {
                    "value": "[concat(parameters('customMLFunctionAppName'),'as owner of RG ',resourceGroup().name)]"
                },
                "roleDefinitionId": {
                    "value": "[parameters('ownerRoleId')]"
                },
                "delegatedManagedIdentityResourceId": {
                    "value": "[if(not(empty(variables('isSameTenantDeployment'))), 'local', reference('CustomMLFunctionApp').outputs.resourceId.value)]"
                }
            }
        }
      },
      {
        "name": "ManagedIdentityRoleAssignment",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-05-01",
        "dependsOn": [
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('identityName'))]"
        ],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('roleAssignmentTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "principalId": {
                    "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('identityName')), '2018-11-30').principalId]"
                },
                "scope": {
                    "value": "[resourceGroup().id]"
                },
                "scopeName": {
                    "value": "[concat(variables('identityName'),'as owner of RG')]"
                },
                "roleDefinitionId": {
                    "value": "[parameters('ownerRoleId')]"
                },
                "principalType": {
                    "value": "ServicePrincipal"
                },
                "delegatedManagedIdentityResourceId": {
                    "value": "[if(not(empty(variables('isSameTenantDeployment'))), 'local', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('identityName')))]"
                }
            }
        }
      },
      {
        "name": "LUIS-Script",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-05-01",
        "dependsOn": [
            "LuisAuthoring",
            "LuisPrediction",
            "WebApp",
            "WebAppSettings",
            "ManagedIdentityRoleAssignment",
            "OrchestrationFunctionAppZipDeploy" 
        ],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('scriptLUISTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "_artifactsLocation": {
                    "value": "[parameters('_artifactsLocation')]"
                },
                "_artifactsLocationSasToken": {
                    "value": "[parameters('_artifactsLocationSasToken')]"
                },
                "deploymentAssetPath": {
                    "value": "[parameters('deploymentAssetPath')]"
                },
                "scriptName": {
                    "value": "LUIS.ps1"
                },
                "luisFileName": {
                    "value": "DIPExtractionAdjustments.json"
                },
                "luisAppName": {
                    "value": "[concat(parameters('luisPredictionName'),'-Extraction')]"
                },
                "targetLuisAuthoringKey": {
                    "value": "[reference('LuisAuthoring').outputs.accountKey.value]"
                },
                "targetLuisAuthoringEndPoint": {
                    "value": "[reference('LuisAuthoring').outputs.endpoint.value]"
                },
                "luisPredictionAccountName": {
                    "value": "[parameters('luisPredictionName')]"
                },
                "appService_name": {
                    "value": "[parameters('webAppName')]"
                },
                "orchFunctionApp_name": {
                    "value": "[parameters('orchestrationFunctionAppName')]"
                },
                
                "identity": {
                  "value": {
                    "type": "UserAssigned",
                    "userAssignedIdentities": {
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('identityName'))]": {}
                    }
                  }
                }
            }
        }
      },
      {
        "name": "Text-Classification-Container-Script",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-05-01",
        "dependsOn": [
            "ManagedIdentityRoleAssignment",
            "ContainerRegistry"
        ],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('scriptTextClassificationTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "_artifactsLocation": {
                    "value": "[parameters('_artifactsLocation')]"
                },
                "_artifactsLocationSasToken": {
                    "value": "[parameters('_artifactsLocationSasToken')]"
                },
                "deploymentAssetPath": {
                    "value": "[parameters('deploymentAssetPath')]"
                },
                "scriptName": {
                    "value": "ImportContainer.ps1"
                },
                "registryName": {
                    "value": "[parameters('containerRegistryName')]"
                },
                "sourceRegistryName": {
                    "value": "[parameters('sourceContainerRegistryName')]"
                },
                "sourceImage": {
                    "value": "training/textclassification:latest"
                },
                "sourceUserName": {
                    "value": "[parameters('sourceContainerUserName')]"
                },
                "sourcePassword": {
                    "value": "[parameters('sourceContainerPassword')]"
                },
                "identity": {
                  "value": {
                    "type": "UserAssigned",
                    "userAssignedIdentities": {
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('identityName'))]": {}
                    }
                  }
                }            
            }
        }
      },
      {
        "name": "KeyVaultAccessPolicyServicePrincipal",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-09-01",
        "dependsOn": [
          "KeyVault"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('keyVaultAccessPolicyFileName'),parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
              "value": "[reference('KeyVault').outputs.accountName.value]"
            },
            "accessPolicies": {
              "value": [{
                "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('identityName')), '2018-11-30').principalId]",
                "tenantId": "[subscription().tenantId]",
                "permissions": {
                  "keys": [],
                  "secrets": [
                    "List",
                    "Get",
                    "Set"
                  ],
                  "certificates": []
                },
                "applicationId": null
              }]
            }
          }
        }
      },
      {
        "name": "ML-FunctionAppUrl-Script",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-05-01",
        "dependsOn": [
            "CustomMLFunctionApp",
            "CustomMLFunctionAppSettings",
            "OrchestrationFunctionApp",
            "OrchestrationFunctionAppAppSettings",
            "KeyVault",
            "KVSTextClassificationTrainingEndpoint",
            "ManagedIdentityRoleAssignment"
        ],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('scriptFunctionAppUrlKVTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "_artifactsLocation": {
                    "value": "[parameters('_artifactsLocation')]"
                },
                "_artifactsLocationSasToken": {
                    "value": "[parameters('_artifactsLocationSasToken')]"
                },
                "deploymentAssetPath": {
                    "value": "[parameters('deploymentAssetPath')]"
                },
                "scriptName": {
                    "value": "MLFunctionUrlKV.ps1"
                },
                "mlFunctionAppName": {
                    "value": "[parameters('customMLFunctionAppName')]"
                },
                "keyVaultname": {
                    "value": "[parameters('keyVaultName')]"
                },
                "appService_name": {
                    "value": "[parameters('orchestrationFunctionAppName')]"
                },
                "identity": {
                  "value": {
                    "type": "UserAssigned",
                    "userAssignedIdentities": {
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('identityName'))]": {}
                    }
                  }
                }
            }
        }
      },
      {
        "name": "ML-DataStore-Script",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-05-01",
        "dependsOn": [
            "ManagedIdentityRoleAssignment",
            "StorageML",
            "MLBlobServiceContainerMLStorage",
            "MachineLearningService"
        ],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[uri(parameters('_artifactsLocation'),concat(variables('combinedTemplatePath'),'/',parameters('scriptDataStoreTemplateFileName'),parameters('_artifactsLocationSasToken')))]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "_artifactsLocation": {
                    "value": "[parameters('_artifactsLocation')]"
                },
                "_artifactsLocationSasToken": {
                    "value": "[parameters('_artifactsLocationSasToken')]"
                },
                "deploymentAssetPath": {
                    "value": "[parameters('deploymentAssetPath')]"
                },
                "scriptName": {
                    "value": "DataStore.ps1"
                },
                "workspaceName": {
                    "value": "[parameters('machineLearningName')]"
                },
                "datastoreName": {
                    "value": "[parameters('machineLearningDatastoreName')]"
                },
                "storageAccountName": {
                    "value": "[parameters('mlStorageAccountName')]"
                },
                "storageContainerName": {
                    "value": "[reference('MLBlobServiceContainerMLStorage').outputs.name.value]"
                },
                "storageKey": {
                    "value": "[reference('StorageML').outputs.accountKey.value]"
                },
                "identity": {
                  "value": {
                    "type": "UserAssigned",
                    "userAssignedIdentities": {
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('identityName'))]": {}
                    }
                  }
                }         
            }
        }
      }
    ]
  }